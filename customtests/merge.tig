let 

 type any = {any : int}
 var buffer := tigerGetchar()

function readint(any: any) : int =
 let var i := 0
     function isdigit(s : string) : int = 
		  ord(buffer)>=ord("0") & ord(buffer)<=ord("9")
     function skipto() =
     (
       printStr("skipto\n");
         printInt(buffer = " "| buffer = "\n");
       while buffer=" " | buffer="\n"
         do (
         printStr(buffer);
         printStr("\n");
         buffer := tigerGetchar()
         );
         printStr(buffer);
         printStr("\n")
     )
  in 
     printStr("\nreadint\n");
     skipto();
     any.any := isdigit(buffer);

     printStr(buffer);
     printStr("buffer\n");
     printInt(any.any);
     printStr("\n");
     while isdigit(buffer)
       do (i := i*10+ord(buffer)-ord("0"); buffer := tigerGetchar();
     printInt(i);
     printStr("\n")
       
       );
     i
 end

 type list = {first: int, rest: list}

 function readlist() : list =
    let var any := any{any=0}
        var i := readint(any)
     in 
     printStr("\nreadlist\n");
     printInt(any.any);
     printStr("\n");
     printInt(i);
     printStr("\n");
     if any.any
         then list{first=i,rest=readlist()}
         else nil
    end

 function merge(a: list, b: list) : list =
   if a=nil then b
   else if b=nil then a
   else if a.first < b.first 
      then list{first=a.first,rest=merge(a.rest,b)}
      else list{first=b.first,rest=merge(a,b.rest)}

 function printlist(l: list) =
   if l=nil then printStr("\n")
   else (printInt(l.first); printStr(" "); printlist(l.rest))

   var list1 := readlist()
   var list2 := (buffer:=tigerGetchar(); readlist())


  /* BODY OF MAIN PROGRAM */
 in 
 printlist(list1);
 printlist(list2);
 printlist(merge(list1,list2));
 printInt(" " = "\n")
end

